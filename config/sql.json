{
    "user": {
    		"checkUser" : "select * from users where email = ?",
    		"checkUserById" : "SELECT * FROM users where id = ?",
    		"createUser" : "INSERT INTO users (firstname, lastname, email, password, roleid ) values (?,?,?,?,?)",
        "getUser": "SELECT users.id, username, roleid, firstname,lastname, sex, dob, contactno, teamid  FROM users  join userdetails  AS usd on users.id = usd.userid LEFT JOIN teamresource tr ON tr.userid = users.id WHERE users.id = ? AND usd.active = true",
        "getUserById": "SELECT users.id, username, usd.firstname, usd.lastname  FROM users  JOIN userdetails AS usd ON  users.id = usd.userid WHERE users.id = ?",
        "getUserByName": "SELECT users.id, username  FROM users WHERE BINARY username = ?",
        "getTeamUsers": "SELECT users.id, username, usd.firstname, usd.lastname, usd.accesslevel FROM users  join userdetails  AS usd on users.id = usd.userid JOIN teamresource tr ON tr.userid = users.id WHERE tr.teamid = ? AND usd.active = true ORDER BY usd.firstname",
        "getTeamUsersWithStatus": "SELECT users.id, username, usd.firstname, usd.lastname from users  join userdetails  AS usd on users.id = usd.userid JOIN teamresource tr ON tr.userid = users.id WHERE tr.teamid = ? AND usd.active = true",
        "getNonTeamUsers": "SELECT users.id, username, ud.firstname, ud.lastname  FROM users  join userdetails  AS ud on users.id = ud.userid JOIN teamresource tr ON tr.userid = users.id WHERE tr.teamid != ?",
        "getLeads": "SELECT users.id, username, usd.firstname, usd.lastname FROM users JOIN userdetails AS usd ON users.id = usd.userid  JOIN role on usd.roleid = role.id WHERE role.id = 2 AND usd.active = true",
        "authUser": "SELECT users.id,username, firstname, lastname FROM users JOIN userdetails  AS usd ON users.id = usd.userid WHERE BINARY username LIKE ? AND password LIKE ? AND usd.active = true",
        "contactExist": "SELECT count(1) as length FROM users AS usr JOIN userdetails AS uds ON usr.id=uds.userid WHERE BINARY usr.username = ? AND uds.contactno = ? ",
        "userExist": "SELECT count(1) as length FROM users AS usr WHERE BINARY usr.username = ?",
        "saveUserPro": "call saveuser(?, ?, ?, ?, ?, ?, ?, ?, ?)",
        "editUserDetailsPro": "call edituserdetails(?, ?, ?, ?, ?, ?, ?, ?)",
        "editPassword": "UPDATE users SET password = ? WHERE BINARY username = ?",
        "getUsersAvailabilityTeamId": "SELECT userid, SUM(NOW() >= startdate AND NOW() <= enddate) AS valid FROM logs WHERE userid IN (SELECT users.id FROM users  JOIN teamresource tr ON tr.userid = users.id WHERE tr.teamid = ?)  AND logs.startdate BETWEEN  CONCAT(CURDATE(), ?)  AND CONCAT(CURDATE(), ?) GROUP BY userid",
        "getUserByTeamId":"SELECT users.username, ud.firstname, ud.lastname FROM  users JOIN userdetails AS ud ON users.id = ud.userid  WHERE users.id = ?"
    },

    "project": {
        "getProjects": "SELECT id, name, category FROM project WHERE (leadid = ?) AND active = true ORDER BY createddate DESC",
        "getAdminProjects": "SELECT id, name, description, DATE_FORMAT(startdate,'%Y-%m-%d') as startdate, DATE_FORMAT(enddate,'%Y-%m-%d') as enddate FROM project WHERE category =0",
        "saveAdminProject": "INSERT INTO project(name  ,description ,startdate ,enddate , leadid ,createddate, category) VALUES  (?, ?, ?, ?, ?, now(), 0)",
        "editAdminProject": "UPDATE project SET name=?, description = ?, startdate = ?, enddate= ?, editdate = now() WHERE id = ?",
        "getUserProjects": "SELECT pr.id, pr.name FROM users as usr JOIN teamresource tr ON usr.id = tr.userid JOIN Team tm on tr.teamid = tm.id JOIN project pr on pr.leadid = tm.leadid or pr.category = 0 WHERE usr.id = ? AND pr.active = true",
        "getMyProjects": "SELECT projectid FROM myprojects  WHERE userid = ? AND active = true",
        "getProject": "SELECT * FROM project AS pr WHERE pr.id = ? AND active = true",
        "saveProject": "INSERT INTO project(name  ,description ,startdate ,enddate , leadid ,createddate) VALUES  (?, ?, ?, ?, ?, now())",
        "editProject": "UPDATE project SET name=?, description = ?, startdate = ?, enddate= ?, editdate = now() WHERE id = ?",
        "getResourcesForProject": "SELECT users.id,users.username, usd.firstname, usd.lastname, DATE_FORMAT(pr.startdate,'%Y-%m-%d') as startdate,  DATE_FORMAT(pr.enddate,'%Y-%m-%d') as enddate, pr.billable  FROM users JOIN userdetails  AS usd ON users.id = usd.userid JOIN projectresource AS pr ON users.Id = pr.userid  WHERE pr.projectid = ?",
        "getResourceDetailsForProject": "SELECT users.id,users.username, usd.firstname, usd.lastname, DATE_FORMAT(pr.startdate,'%Y-%m-%d') as startdate,  DATE_FORMAT(pr.enddate,'%Y-%m-%d') as enddate, pr.billable  FROM users JOIN userdetails  AS usd ON users.id = usd.userid JOIN projectresource AS pr ON users.Id = pr.userid  WHERE pr.projectid = ? AND  users.id = ? ",
        "addResourceToProject": "INSERT INTO projectresource(projectid  ,userid, startdate, enddate, description, billable, createddate) VALUES  (?, ?, ?, ?, ?, ?, now())",
        "removeResourceFromProject": "DELETE FROM projectresource WHERE projectid = ? and userid = ?",
        "addMyProject": "call editmyproject(?, ?)",
        "removeMyProjectPro": "UPDATE myprojects SET ACTIVE = false, editdate = now() WHERE projectid = ?",
        "addNRemoveResourceFromProject": "UPDATE projectresource SET projectid = ?, startdate  = now(), enddate  = now(),editdate = now() WHERE projectid = ? AND userid = ?",
        "getUserMappedProjectCountByTeamId": "SELECT userid,count(1) AS count FROM projectresource WHERE userid IN (SELECT users.id FROM users JOIN userdetails usd ON users.id = usd.userid JOIN teamresource tr ON tr.userid = users.id WHERE tr.teamid = ? and usd.active = true) GROUP BY userid",
        "getProjectMappedUserCountByTeamId": "SELECT projectid,count(1) AS count FROM projectresource WHERE userid IN (SELECT users.id FROM users  JOIN userdetails usd ON users.id = usd.userid JOIN teamresource tr ON tr.userid = users.id WHERE tr.teamid = ? and usd.active = true) GROUP BY projectid"
    },

    "team": {
        "getTeamLeadDetailsByUserId":"SELECT users.username, ud.firstname,ud.lastname FROM team JOIN teamresource AS tr ON tr.teamid = team.id JOIN users ON team.leadid = users.id JOIN userdetails AS ud ON users.id = ud.userid WHERE tr.userid = ?",
        "getTeams": "SELECT team.id, team.name, team.description,users.username,users.id as leadid FROM team join users on team.leadid = users.id",
        "getTeam": "SELECT team.id,team.name FROM team WHERE team.leadid = ?",
        "saveTeam": "INSERT INTO team(name  ,description ,leadid, createddate) VALUES  (?, ?, ?, now())",
        "editTeam": "UPDATE team SET name = ?, description = ? ,leadid = ? , editdate = now() WHERE id = ?",
        "removeTeam": "UPDATE team SET active = false, editdate = now() WHERE id = ?",
        "mapUserPro": "call mapuser(?, ?, ?)",
        "setPermissions": "UPDATE userdetails SET accesslevel = ? WHERE userid = ?",
        "hasLogAccess": "SELECT usd.accesslevel, usd.userid, tr.teamid FROM userdetails AS usd join teamresource AS tr on  usd.userid  = tr.userid WHERE usd.userid = ?",
        "getTeamMembersByRole": "SELECT userid, firstname, lastname FROM userdetails WHERE roleid = ? AND active = true"
    },

    "role": {
        "getRoles": "SELECT id, name, description FROM role",
        "getRole": "SELECT role.name FROM userdetails JOIN ROLE ON userdetails.roleid = role.id WHERE userdetails.userid = ?",
        "getRoleByUserName": "SELECT role.name FROM users JOIN userdetails ON users.id = userdetails.userid JOIN role ON userdetails.roleid = role.id WHERE users.username = ?",
        "saveRole": "INSERT INTO role(name , description ) VALUES  (?, ?)",
        "editRole": "UPDATE role SET name = ?, description = ?  WHERE id = ?",
        "removeRole": "UPDATE role SET active = false WHERE id = ?"
    },

    "log": {
        "getUserDetailsByLogid":"SELECT users.username,ud.firstname,ud.lastname FROM logs JOIN users on logs.userid = users.id JOIN userdetails as ud on ud.userid = users.id WHERE logs.id = ?",
        "getLogsByUserId": "SELECT logs.id, logs.projectid, project.name as title , logs.iteration, logs.story, logstatus.id as statusid, logstatus.name as status, logs.plannedStatus, DATE_FORMAT(logs.plannedstartdate,'%Y-%m-%d %h:%i %p') as plannedstart, DATE_FORMAT(logs.plannedenddate,'%Y-%m-%d %h:%i %p')  as plannedend, DATE_FORMAT(logs.startdate,'%Y-%m-%d %h:%i %p') as start, DATE_FORMAT(logs.enddate,'%Y-%m-%d %h:%i %p')  as end, logs.description,logs.className, logs.locked, logs.lockrequest FROM logs LEFT JOIN logstatus ON logs.status = logstatus.id JOIN project ON logs.projectid = project.id WHERE (logs.startdate BETWEEN  ? AND ? OR logs.plannedstartdate BETWEEN  ? AND ?) AND userid = ? ORDER BY logs.plannedstartdate",
        "getLogById": "SELECT * FROM logs WHERE id = ?",
        "getLogHistoryById": "SELECT * FROM loghistory WHERE logid = ?",
        "savePlannedLog": "INSERT INTO logs (projectid, iteration, story, status, plannedstartdate, plannedenddate, startdate, enddate, createddate, userid, loggeduser, plannedStatus, className, description) VALUES (?, ?, ?, ?, ?, ?, ?, ? ,now(), ?, ?, ?, ?, ?)",
        "saveActualLog": "UPDATE logs SET startdate = ?, enddate = ? where  id = ?",
        "saveLogHistory": "INSERT INTO loghistory (logid, projectid, iteration, story, status, startdate, enddate, userid, loggeduser, description, createddate, editdate, locked, lockrequest) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
        "editLog": "UPDATE logs SET projectid = ?, iteration = ?, story = ?, status = ?, startdate = ?, enddate = ?, loggeduser = ?, description = ?, plannedStatus = ?, editdate = now(),locked = true where  id = ?",
        "getUserReportLogs": "SELECT logs.id , project.name as title, timestampdiff( minute, logs.startdate,logs.enddate ) as diff FROM logs JOIN project ON logs.projectid = project.id WHERE logs.startdate BETWEEN  ? AND ? AND userid = ? ORDER BY logs.startdate",
        "getReportLogs": "SELECT logs.id, project.name, CONCAT (usd.firstname, ' ' , usd.lastname)  as title, timestampdiff( minute, logs.startdate,logs.enddate ) as diff FROM logs JOIN project ON logs.projectid = project.id join users ON users.id = logs.userid join userdetails AS usd ON  users.id = usd.userid WHERE logs.startdate BETWEEN  ? AND ?  ORDER BY logs.startdate",
        "getDetailedUserReportLogs": "SELECT logs.id , project.name as title, project.category as category,  REPLACE(logs.iteration, 0, '') as iteration, logs.story, logs.status, logs.description, DATE_FORMAT(logs.startdate,'%Y-%m-%d %h:%i %p') as start, DATE_FORMAT(logs.enddate,'%Y-%m-%d %h:%i %p') as end, timestampdiff( minute, logs.startdate,logs.enddate ) as diff, DATE_FORMAT(logs.createddate,'%Y-%m-%d %h:%i %p') as created, DATE_FORMAT(logs.editdate,'%Y-%m-%d %h:%i %p') as edit FROM logs JOIN project ON logs.projectid = project.id WHERE logs.startdate BETWEEN  ? AND ? AND userid = ? ORDER BY logs.startdate",
        "getDetailedReportLogs": "SELECT logs.id, project.name, project.category as category,  REPLACE(logs.iteration, 0, '') as iteration, logs.story, logs.status, logs.description, CONCAT (usd.firstname, ' ' , usd.lastname)  as title, DATE_FORMAT(logs.startdate,'%Y-%m-%d %h:%i %p') as start, DATE_FORMAT(logs.enddate,'%Y-%m-%d %h:%i %p') as end, timestampdiff( minute, logs.startdate,logs.enddate ) as diff, DATE_FORMAT(logs.createddate,'%Y-%m-%d %h:%i %p') as created, DATE_FORMAT(logs.editdate,'%Y-%m-%d %h:%i %p') as edit FROM logs JOIN project ON logs.projectid = project.id join users ON users.id = logs.userid join userdetails AS usd ON  users.id = usd.userid WHERE logs.startdate BETWEEN  ? AND ?  and logs.userid  IN (SELECT userid  FROM teamresource WHERE teamid = ?) ORDER BY logs.startdate",
        "getTodayUsersLogsByTeamId": "SELECT userid, sum(timestampdiff(minute,startdate,enddate)) as logged FROM logs WHERE userid in (SELECT users.id FROM users  JOIN teamresource tr ON tr.userid = users.id WHERE tr.teamid = ?) AND logs.startdate BETWEEN  CONCAT(CURDATE(), ?)  AND CONCAT(CURDATE(), ?) GROUP BY userid",
        "getTodayProjectsLogsByLeadId": "SELECT projectid, sum(timestampdiff(minute,startdate,enddate)) as logged FROM logs WHERE projectid in (SELECT project.id FROM project  WHERE project.leadid = ?) AND logs.startdate BETWEEN  CONCAT(CURDATE(), ?)  AND CONCAT(CURDATE(), ?) GROUP BY projectid",
        "unlockLog": "UPDATE logs SET lockrequest = false, locked = false, editdate = now() WHERE userid = ? and  id = ?",
        "unlockLogRequest": "UPDATE logs SET lockrequest = true, editdate = now() WHERE userid = ? and  id = ?",
        "getUserLoggedPerProject": "SELECT logs.userid, sum(timestampdiff(minute,logs.startdate,logs.enddate)) as logged FROM logs join project on logs.projectid = project.id WHERE logs.userid = ? and logs.projectid = ? AND logs.startdate BETWEEN  ? AND ?"
    },

    "logstatus": {
        "getLogStatuses": "SELECT * FROM logstatus"
    },

    "common": {
        "getSelect": "SELECT * FROM ?? WHERE ?? = ?"
    }

}